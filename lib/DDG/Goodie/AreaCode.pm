package DDG::Goodie::AreaCode;

use DDG::Goodie;
use Number::Phone;
use DBI;
use Encode qw(_utf8_on);

# Regexp for AreaCode.
my $area_code_qr = qr/areacode/io;

triggers query_nowhitespace => qr/$area_code_qr.*(?<!\d)([\d]{3}?)(?!\d)|([\d]{3}?)(?!\d).*$area_code_qr/o;

my %state_names = (
    'AL'=>'Alabama',
    'AK'=>'Alaska',
    'AZ'=>'Arizona',
    'AR'=>'Arkansas',
    'CA'=>'California',
    'CO'=>'Colorado',
    'CT'=>'Connecticut',
    'DE'=>'Delaware',
    'DC'=>'District of Columbia',
    'FL'=>'Florida',
    'GA'=>'Georgia',
    'HI'=>'Hawaii',
    'ID'=>'Idaho',
    'IL'=>'Illinois',
    'IN'=>'Indiana',
    'IA'=>'Iowa',
    'KS'=>'Kansas',
    'KY'=>'Kentucky',
    'LA'=>'Louisiana',
    'ME'=>'Maine',
    'MD'=>'Maryland',
    'MA'=>'Massachusetts',
    'MI'=>'Michigan',
    'MN'=>'Minnesota',
    'MS'=>'Mississippi',
    'MO'=>'Missouri',
    'MT'=>'Montana',
    'NE'=>'Nebraska',
    'NV'=>'Nevada',
    'NH'=>'New Hampshire',
    'NJ'=>'New Jersey',
    'NM'=>'New Mexico',
    'NY'=>'New York',
    'NC'=>'North Carolina',
    'ND'=>'North Dakota',
    'OH'=>'Ohio',
    'OK'=>'Oklahoma',
    'OR'=>'Oregon',
    'PA'=>'Pennsylvania',
    'RI'=>'Rhode Island',
    'SC'=>'South Carolina',
    'SD'=>'South Dakota',
    'TN'=>'Tennessee',
    'TX'=>'Texas',
    'UT'=>'Utah',
    'VT'=>'Vermont',
    'VA'=>'Virginia',
    'WA'=>'Washington',
    'WV'=>'West Virginia',
    'WI'=>'Wisconsin',
    'WY'=>'Wyoming'
);

my %area_code_check = (
    "862" => "NJ, US",
    "863" => "FL, US",
    "864" => "SC, US",
    "865" => "TN, US",
    "867" => "Yukon, NW Terr., Nunavut, CANADA",
    "868" => "Trinidad and Tobago, TRINIDAD AND TOBAGO",
    "869" => "St. Kitts and Nevis, ST. KITTS AND NEVIS",
    "870" => "AR, US",
    "876" => "Jamaica, JAMAICA",
    "878" => "PA, US",
    "901" => "TN, US",
    "902" => "Nova Scotia, Prince Edward Island, CANADA",
    "903" => "TX, US",
    "904" => "FL, US",
    "905" => "Ontario, CANADA",
    "906" => "MI, US",
    "907" => "AK, US",
    "908" => "NJ, US",
    "909" => "CA, US",
    "910" => "NC, US",
    "912" => "GA, US",
    "913" => "KS, US",
    "914" => "NY, US",
    "915" => "TX, US",
    "916" => "CA, US",
    "917" => "NY, US",
    "918" => "OK, US",
    "919" => "NC, US",
    "920" => "WI, US",
    "925" => "CA, US",
    "928" => "AZ, US",
    "931" => "TN, US",
    "936" => "TX, US",
    "937" => "OH, US",
    "939" => "Puerto Rico, US",
    "940" => "TX, US",
    "941" => "FL, US",
    "947" => "MI, US",
    "949" => "CA, US",
    "951" => "CA, US",
    "952" => "MN, US",
    "954" => "FL, US",
    "956" => "TX, US",
    "970" => "CO, US",
    "971" => "OR, US",
    "972" => "TX, US",
    "973" => "NJ, US",
    "978" => "MA, US",
    "979" => "TX, US",
    "980" => "NC, US",
    "985" => "LA, US",
    "989" => "MI, US",
    "682" => "TX, US",
    "684" => "AS, US",
    "701" => "ND, US",
    "702" => "NV, US",
    "703" => "VA, US",
    "704" => "NC, US",
    "705" => "Ontario, CANADA",
    "706" => "GA, US",
    "707" => "CA, US",
    "708" => "IL, US",
    "709" => "Newfoundland, CANADA",
    "710" => "US, US",
    "712" => "IA, US",
    "713" => "TX, US",
    "714" => "CA, US",
    "715" => "WI, US",
    "716" => "NY, US",
    "717" => "PA, US",
    "718" => "NY, US",
    "719" => "CO, US",
    "720" => "CO, US",
    "724" => "PA, US",
    "727" => "FL, US",
    "731" => "TN, US",
    "732" => "NJ, US",
    "734" => "MI, US",
    "740" => "OH, US",
    "754" => "FL, US",
    "757" => "VA, US",
    "758" => "St. Lucia, ST. LUCIA",
    "760" => "CA, US",
    "762" => "GA, US",
    "763" => "MN, US",
    "765" => "IN, US",
    "767" => "Dominica, DOMINICA",
    "769" => "MS, US",
    "770" => "GA, US",
    "772" => "FL, US",
    "773" => "IL, US",
    "774" => "MA, US",
    "775" => "NV, US",
    "778" => "British Columbia, CANADA",
    "779" => "IL, US",
    "780" => "Alberta, CANADA",
    "781" => "MA, US",
    "784" => "St. Vincent and the Grenadines, ST. VINCENT & GRENADINES",
    "785" => "KS, US",
    "786" => "FL, US",
    "787" => "Puerto Rico, US",
    "801" => "UT, US",
    "802" => "VT, US",
    "803" => "SC, US",
    "804" => "VA, US",
    "805" => "CA, US",
    "806" => "TX, US",
    "807" => "Ontario, CANADA",
    "808" => "HI, US",
    "809" => "the Dominican Republic, DOMINICAN REPUBLIC",
    "810" => "MI, US",
    "812" => "IN, US",
    "813" => "FL, US",
    "814" => "PA, US",
    "815" => "IL, US",
    "816" => "MO, US",
    "817" => "TX, US",
    "818" => "CA, US",
    "819" => "Quebec, CANADA",
    "828" => "NC, US",
    "829" => "the Dominican Republic, DOMINICAN REPUBLIC",
    "830" => "TX, US",
    "831" => "CA, US",
    "832" => "TX, US",
    "843" => "SC, US",
    "845" => "NY, US",
    "847" => "IL, US",
    "848" => "NJ, US",
    "850" => "FL, US",
    "856" => "NJ, US",
    "857" => "MA, US",
    "858" => "CA, US",
    "859" => "KY, US",
    "860" => "CT, US",
    "574" => "IN, US",
    "575" => "NM, US",
    "580" => "OK, US",
    "585" => "NY, US",
    "586" => "MI, US",
    "601" => "MS, US",
    "602" => "AZ, US",
    "603" => "NH, US",
    "604" => "British Columbia, CANADA",
    "605" => "SD, US",
    "606" => "KY, US",
    "607" => "NY, US",
    "608" => "WI, US",
    "609" => "NJ, US",
    "610" => "PA, US",
    "201" => "NJ, US",
    "202" => "DC, US",
    "203" => "CT, US",
    "204" => "Manitoba, CANADA",
    "205" => "AL, US",
    "206" => "WA, US",
    "207" => "ME, US",
    "208" => "ID, US",
    "209" => "CA, US",
    "210" => "TX, US",
    "212" => "NY, US",
    "213" => "CA, US",
    "214" => "TX, US",
    "215" => "PA, US",
    "216" => "OH, US",
    "217" => "IL, US",
    "218" => "MN, US",
    "219" => "IN, US",
    "224" => "IL, US",
    "225" => "LA, US",
    "226" => "Ontario, CANADA",
    "228" => "MS, US",
    "229" => "GA, US",
    "231" => "MI, US",
    "234" => "OH, US",
    "239" => "FL, US",
    "240" => "MD, US",
    "242" => "the Bahamas, BAHAMAS",
    "246" => "Barbados, BARBADOS",
    "248" => "MI, US",
    "250" => "British Columbia, CANADA",
    "251" => "AL, US",
    "252" => "NC, US",
    "253" => "WA, US",
    "254" => "TX, US",
    "256" => "AL, US",
    "260" => "IN, US",
    "262" => "WI, US",
    "264" => "Anguilla, ANGUILLA",
    "267" => "PA, US",
    "268" => "Antigua and Barbuda, ANTIGUA/BARBUDA",
    "269" => "MI, US",
    "270" => "KY, US",
    "276" => "VA, US",
    "281" => "TX, US",
    "284" => "the British Virgin Islands, BRITISH VIRGIN ISLANDS",
    "289" => "Ontario, CANADA",
    "301" => "MD, US",
    "302" => "DE, US",
    "303" => "CO, US",
    "304" => "WV, US",
    "305" => "FL, US",
    "306" => "Saskatchewan, CANADA",
    "307" => "WY, US",
    "308" => "NE, US",
    "309" => "IL, US",
    "310" => "CA, US",
    "312" => "IL, US",
    "313" => "MI, US",
    "314" => "MO, US",
    "315" => "NY, US",
    "316" => "KS, US",
    "317" => "IN, US",
    "318" => "LA, US",
    "319" => "IA, US",
    "320" => "MN, US",
    "321" => "FL, US",
    "323" => "CA, US",
    "325" => "TX, US",
    "330" => "OH, US",
    "331" => "IL, US",
    "334" => "AL, US",
    "336" => "NC, US",
    "337" => "LA, US",
    "339" => "MA, US",
    "340" => "the US Virgin Islands, US",
    "345" => "the Cayman Islands, CAYMAN ISLANDS",
    "347" => "NY, US",
    "351" => "MA, US",
    "352" => "FL, US",
    "360" => "WA, US",
    "361" => "TX, US",
    "386" => "FL, US",
    "401" => "RI, US",
    "402" => "NE, US",
    "403" => "Alberta, CANADA",
    "404" => "GA, US",
    "405" => "OK, US",
    "406" => "MT, US",
    "407" => "FL, US",
    "408" => "CA, US",
    "409" => "TX, US",
    "410" => "MD, US",
    "412" => "PA, US",
    "413" => "MA, US",
    "414" => "WI, US",
    "415" => "CA, US",
    "416" => "Ontario, CANADA",
    "417" => "MO, US",
    "418" => "Quebec, CANADA",
    "419" => "OH, US",
    "423" => "TN, US",
    "424" => "CA, US",
    "425" => "WA, US",
    "430" => "TX, US",
    "432" => "TX, US",
    "434" => "VA, US",
    "435" => "UT, US",
    "438" => "Quebec, CANADA",
    "440" => "OH, US",
    "441" => "Bermuda, BERMUDA",
    "443" => "MD, US",
    "450" => "Quebec, CANADA",
    "469" => "TX, US",
    "473" => "Grenada, GRENADA",
    "478" => "GA, US",
    "479" => "AR, US",
    "480" => "AZ, US",
    "484" => "PA, US",
    "501" => "AR, US",
    "502" => "KY, US",
    "503" => "OR, US",
    "504" => "LA, US",
    "505" => "NM, US",
    "506" => "New Brunswick, CANADA",
    "507" => "MN, US",
    "508" => "MA, US",
    "509" => "WA, US",
    "510" => "CA, US",
    "512" => "TX, US",
    "513" => "OH, US",
    "514" => "Quebec, CANADA",
    "515" => "IA, US",
    "516" => "NY, US",
    "517" => "MI, US",
    "518" => "NY, US",
    "519" => "Ontario, CANADA",
    "520" => "AZ, US",
    "530" => "CA, US",
    "540" => "VA, US",
    "541" => "OR, US",
    "551" => "NJ, US",
    "559" => "CA, US",
    "561" => "FL, US",
    "562" => "CA, US",
    "563" => "IA, US",
    "567" => "OH, US",
    "570" => "PA, US",
    "571" => "VA, US",
    "573" => "MO, US",
    "612" => "MN, US",
    "613" => "Ontario, CANADA",
    "614" => "OH, US",
    "615" => "TN, US",
    "616" => "MI, US",
    "617" => "MA, US",
    "618" => "IL, US",
    "619" => "CA, US",
    "620" => "KS, US",
    "623" => "AZ, US",
    "626" => "CA, US",
    "630" => "IL, US",
    "631" => "NY, US",
    "636" => "MO, US",
    "641" => "IA, US",
    "646" => "NY, US",
    "647" => "Ontario, CANADA",
    "649" => "the Turks and Caicos Islands, TURKS & CAICOS ISLANDS",
    "650" => "CA, US",
    "651" => "MN, US",
    "660" => "MO, US",
    "661" => "CA, US",
    "662" => "MS, US",
    "664" => "Montserrat, MONTSERRAT",
    "671" => "GU, US",
    "678" => "GA, US",
    "959" => "CT, US",
);

handle query_nowhitespace => sub {
    # This function parses the database
    # area code location field into a readable location.
    # Yes, the DB format could be cleaned up--it came
    # from an Excel file.
    sub area_code_location {
        my ($str, $state_names_ref) = @_;

        my ($sub_country, $country) = $str =~ /(.*), (.*)/;
        grep( $_ =~ s/\"//g, ( $sub_country, $country ) );

        if ($country eq 'US' && length($sub_country) == 2) {
            $str = $$state_names_ref{uc $sub_country};
        }
        elsif ($country eq 'CANADA') {
            $str = "$sub_country, Canada";
        }
        else {
            $str = $sub_country;
        }

        return $str;
    }

    my $area_code = $1 || $2;
    my $is_area_code = 0;
    my $area_code_location = '';
    if(exists $area_code_check{$area_code}) {
        $area_code_location = $area_code_check{$area_code};
    }
    if ($area_code_location) {
        my ($sub_country, $country) = $area_code_location =~ /(.*), (.*)/;
        grep($_ =~ s/\"//g, ($sub_country, $country));

        # Make string for display.
        $area_code_location = &area_code_location($area_code_location, \%state_names);

        my $map = '';
        if ($country eq 'US' && length($sub_country) == 2 ) {
            $sub_country = lc $sub_country;
            $map         = qq(<a href="http://www.nanpa.com/area_code_maps/display.html?$sub_country">) . 'Map' . '</a>';
        }
        elsif ($country eq 'CANADA' ) {
            $map = qq(<a href="http://www.cnac.ca/npa_codes/npa_map.htm">) . 'Map' . '</a>';
        }
        else {
            my $sub_country_escape = encode_for_link($sub_country);
            $map = qq(<a href="http://open.mapquest.com/?q=$sub_country_escape">) . 'Map' . '</a>';
        }

        return heading => "Area Codes ($area_code_location)", html => "$area_code is an area code in $area_code_location" . " - " . $map;    
    }
};

1;
