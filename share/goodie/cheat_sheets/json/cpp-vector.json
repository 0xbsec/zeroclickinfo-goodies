{
    "id": "cpp_vector_cheat_sheet",
    "name": "C++ Vector",
    "description": "C++ vectors are sequence containers representing arrays that can change in size",
    
    "metadata": {
        "sourceName": "cplusplus.com",
        "sourceUrl" : "http://www.cplusplus.com/reference/vector/vector/"
    },

    "aliases": [
        "c++ vectors"
    ],

    "template_type": "terminal",

    "section_order": [
        "Iterators",
        "Capacity",
        "Element Access",
        "Modifiers",
        "Allocator"
    ],

    "sections": {
        "Iterators": [
            {
                "key": "myvector.begin()",
                "val": "Returns an iterator pointing to the first element in the vector"
            },
            {
                "key": "myvector.end()",
                "val": "Returns an iterator referring to the past-the-end element in the vector container"
            },
            {
                "key": "myvector.rbegin()",
                "val": "Returns a reverse iterator pointing to the last element in the vector"
            },
            {
                "key": "myvector.rend()",
                "val": "Returns a reverse iterator pointing to the theoretical element preceding the first element in the vector"
            },
            {
                "key": "myvector.cbegin()",
                "val": "Returns a const_iterator pointing to the first element in the container(C++ 11 Only)"
            },
            {
                "key": "myvector.cend()",
                "val": "Returns a const_iterator pointing to the past-the-end element in the container(C++ 11 Only)"
            },
            {
                "key": "myvector.crbegin()",
                "val": "Returns a const_reverse_iterator to the reverse beginning of the sequence(C++ 11 Only)"
            },
            {
                "key": "myvector.crend()",
                "val": "Returns a const_reverse_iterator pointing to the theoretical element preceding the first element in the container(C++ 11 Only)"
            }
        ],
        "Capacity": [
            {
                "key": "myvector.size()",
                "val": "Returns the number of elements in the vector"
            },
            {
                "key": "myvector.max_size()",
                "val": "Returns the maximum number of elements that the vector can hold"
            },
            {
                "key": "myvector.resize()",
                "val": "Resizes the container so that it contains n elements"
            },
            {
                "key": "myvector.capacity()",
                "val": "Returns the size of the storage space currently allocated for the vector"
            },
            {
                "key": "myvector.reserve()",
                "val": "Requests that the vector capacity be at least enough to contain n elements"
            },
            {
                "key": "myvector.shrink_to_fit()",
                "val": "Requests the container to reduce its capacity to fit its size(C++ 11 Only)"
            }
        ],
