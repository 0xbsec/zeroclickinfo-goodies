{
    "id": "cpp_unordered_map_cheat_sheet",
    "name": "C++ Unordered Map",
    "description": "C++ <unordered_maps> are associative containers that store elements formed by the combination of a key value and a mapped value, and which allows for fast retrieval of individual elements based on their keys (C++11 only)",

    "metadata": {
        "sourceName": "cplusplus.com",
        "sourceUrl" : "http://www.cplusplus.com/reference/unordered_map/unordered_map/"
    },

    "aliases": [
        "c++ unordered maps",
        "c++ unordered map",
        "c++ unordered map container",
        "c++ unordered maps container",
        "cpp unordered maps",
        "cpp unordered map container",
        "cpp unordered maps container"
    ],

    "template_type": "terminal",

    "section_order": [
        "Capacity",
        "Iterators",
        "Element Access",
        "Element Lookup",
        "Modifiers",
        "Buckets",
        "Hash Policy",
        "Observers",
        "Non Member Function Overloads",
    ],

    "sections": {
        "Capacity": [
            {
                "key": "umap.empty()",
                "val": "Returns a bool value indicating whether the unordered_map container is empty, i.e. whether its size is 0"
            },
            {
                "key": "umap.size()",
                "val": "Returns the number of elements in the unordered_map container"
            },
            {
                "key": "umap.max_size()",
                "val": "Returns the maximum number of elements that the unordered_map container can hold"
            }
        ],
        "Iterators": [
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.end()",
                "val": "Returns an iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.cbegin()",
                "val": "Returns a const_iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.cend()",
                "val": "Returns a const_iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            }
        ],
        "Element Access": [
            {
                "key": "mymap\\[k\\]",
                "val": "If k matches the key of an element in the container, the function returns a reference to its mapped value; If k does not match the key of any element in the container, the function inserts a new element with that key and returns a reference to its mapped value"
            },
            {
                "key": "mymap.at(k)",
                "val": "Returns a reference to the mapped value of the element with key k in the unordered_map"
            }
        ],
        "Element Lookup": [
            {
                "key": "mymap.find(k)",
                "val": "Searches the container for an element with k as key and returns an iterator to it if found, otherwise it returns an iterator to unordered_map::end"
            },
            {
                "key": "mymap.count(k)",
                "val": "Searches the container for elements whose key is k and returns the number of elements found"
            },
            {
                "key": "mymap.equal_range(k)",
                "val": "Returns the bounds of a range that includes all the elements in the container with a key that compares equal to k"
            }
        ],
        "Modifiers": [
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.end()",
                "val": "Returns an iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.cbegin()",
                "val": "Returns a const_iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.end()",
                "val": "Returns an iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.cbegin()",
                "val": "Returns a const_iterator pointing to the first element in the unordered_map container or in one of its buckets"
            }
        ],
        "Buckets": [
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.end()",
                "val": "Returns an iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.cbegin()",
                "val": "Returns a const_iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            }
        ],
        "Hash Policy": [
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.end()",
                "val": "Returns an iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.cbegin()",
                "val": "Returns a const_iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            }
        ],
        "Observers": [
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.end()",
                "val": "Returns an iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.cbegin()",
                "val": "Returns a const_iterator pointing to the first element in the unordered_map container or in one of its buckets"
            }
        ],
        "Non Member Function Overloads": [
            {
                "key": "mymap.begin()",
                "val": "Returns an iterator pointing to the first element in the unordered_map container or in one of its buckets"
            },
            {
                "key": "mymap.end()",
                "val": "Returns an iterator pointing to the past-the-end element in the unordered_map container or in one of its buckets"
            }
        ]
    }
}
