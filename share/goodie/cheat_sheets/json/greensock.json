{
    "id": "greensock_cheat_sheet",
    "name": "Greensock",
    "description": "GreenSock APIS: TweenLite , TweenMax , TimelineLite , TimelineMax",

    "metadata": {
        "sourceName": "Greensock",
        "sourceUrl" : "https://greensock.com/"
    },

    "aliases": [
        "web animation"
    ],

    "template_type": "reference",

    "section_order": [
        "Description",
        "Core Files Size",
        "TweenLite",
        "TweenMax",
        "Default Easing Functions",
        "From Tween",
        "FromTo Tween",
        "Callback Functions",
        "TimelineLite",
        "Control Timeline playback",
        "Changing CSS Classes",
        "GreenSock + jQuery" ,
        "Bonus Plugins for Club Members Only"
    ],

    "sections": {
        "TweenLite": [
            {
                "key": "Selects the element to be animated",
                "val": "var $box = $('#box')"
            },
            {
                "key": "Creates a Tween",
                "val": "var tween = TweenLite.to($box , 2 , {x:100 , ease:Power1.easeInOut , delay:2 , onComplete:myFunction , onCompleteParams:[element,'param2']})"
            }
        ],
        "Default Easing Functions": [
            {
                "key":"Demo",
                "val":"http://greensock.com/ease-visualizer"
            },
            {
                "key": "Linear",
                "val": "ease:Power0.easeNone"
            },
            {
                "key": "",
                "val": "Power1,Power2,Power3,Power4,BackBounce,Circ,Elastic,Expo,Sine  .easeIn .easeOut .easeInOut"
            },
            {
                "key":"",
                "val":"ease:RoughEase,SlowMo,SteppedEase  .ease.config()"
            }
        ],
        "Callback Functions": [
            {
                "key":"onComplete",
                "val":"When Tween has completed"
            },
            {
                "key":"onStart",
                "val":"When Tween begins"
            },
            {
                "key":"onUpdate",
                "val":"On every frame of the tween"
            }
        ],
        "From Tween":[
            {
                "key":"",
                "val":"TweenLite.from(element , duration , { fromVars });"
            }
        ],
        "FromTo Tween":[
            {
                "key":"",
                "val":"TweenLite.fromTo(element , duration , { fromVars } , { toVars });"
            }
        ],
        "Core Files Size":[
            {
                "key":"TweenLite",
                "val":"9kb"
            },
            {
                "key":"TweenMax",
                "val":"34kb"
            },
            {
                "key":"TimelineLite",
                "val":"4kb"
            },
            {
                "key":"TimelineMax",
                "val":"6kb"
            }
        ],
        "TweenMax":[
            {
                "key":"To move the box in x and y direction",
                "val":"TweenMax.to($box , 1 , {x:'-=50' , y:'+=50' , onComplete: myFunction , ease:Back.easeOut });"
            }
        ],
        "Changing CSS Classes":[
            {
                "key":"To remove a class '.anime' from body",
                "val":"TweenLite.set($body , {className: '-=anime'});"
            },
            {
                "key":"Add class '.anime' to body",
                "val":"TweenLite.set($body , {className: '+=anime'});"
            },
            {
                "key":"Set only class '.anime' to body",
                "value":"TweenLite.set($body , {className: 'anime'});"
            }
        ],
        "GreenSock + jQuery":[
            {
                "key":"Scale box on hover",
                "val":"$box.hover( function() { TweenLite.to($(this) , 1 , {scale:1.2}) } )"
            },
            {
                "key":"Move box 100px to the right on click",
                "val":"$box.on('click', function(e){ TweenLite.to($(this), 0.3, {x:'+=100px' } });"
            }
        ],
        "Bonus Plugins for Club Members Only":[
            {
                "key":"DrawSVGPlugin(3kb)",
                "val":"Allows to progressively reveal (or hide) and animate the stroke of an SVG."
            },
            {
                "key":"physics2D(3kb)",
                "val":"Tweening objects based on velocity, acceleration, friction, etc."
            },
            {
                "key":"physicsProps(3kb)",
                "val":"Similar to physics2D plugin but without a specific end value in mind."
            },
            {
                "key":"throwProps(10kb)",
                "val":"Allows to smoothly glide any property to a stop, honoring an initial velocity as well as applying optional restrictions on the end value."
            },
            {
                "key":"scrambleText(4kb)",
                "val":"Scrambles the text in a DOM element with randomized."
            },
            {
                "key":"SplitText(7kb)",
                "val":"Allows you to split HTML text into characters, words and lines."
            }
        ],
        "Description":[
            {
                "key":"TweenLite",
                "val":"TweenLite is an extremely fast, lightweight, and flexible animation tool that serves as the foundation of the GreenSock."
            },
            {
                "key":"TweenMax",
                "val":"TweenMax extends TweenLite.TweenMax provides a single JavaScript file that contains everything commonly need for animating DOM elements."
            },
            {
                "key":"TimelineLite",
                "val":"TimelineLite is a lightweight, intuitive timeline class for building and managing sequences of TweenLite, TweenMax, TimelineLite, and/or TimelineMax instances."
            },
            {
                "key":"TimelineMax",
                "val":"TimelineMax extends TimelineLite, offering exactly the same functionality plus useful features."
            }
        ],
        "TimelineLite":[
            {
                "key":"Instantiate a TimelineLite ",
                "val":"var tl = new TimelineLite();"
            },
            {
                "key":"Sequence multiple Tweens(Runs one after another)",
                "val":"tl.to($box , 1, {x:50,y:0}) .to($box , 1, {x:50,y:50}) .to($box , 1, {x:-50,y:50}) .to($box , 1, {x:-50,y:0});"
            },
            {
                "key":"Add position parameter '+=0.5' to schedule next tween 0.5 seconds after previous tweens end",
                "val":"tl.to($box, 0.5, {scale:.5}, '+=0.5');"
            },
            {
                "key":"To schedule next tween 0.25 seconds before previous tweens end(For Overlapping)",
                "val":"tl.to($box, 0.5, {scale:.5}, '-=0.25');"
            },
            {
                "key":"Adding a label helps in jumping to a part of animation specified by name of label.Adding a label 0.5s later to mark the placement of the next Tween",
                "val":"tl.add('scaleBox', '+=0.5');"
            },
            {
                "key":"Adding Tween to label position",
                "val":"tl.to($box, 0.5, {scale:.5}, 'scaleBox');"
            },
            {
                "key":"To jump to the label or to play the part of animation specified under label 'scaleBox'",
                "val":"tl.play('scaleBox');"
            }
        ],
        "Control Timeline playback":[
            {
                "key":"tl.play(1.5);",
                "val":"Play from 1.5s"
            },
            {
                "key":"tl.play(-1);",
                "val":"Play 1s from end"
            },
            {
                "key":"tl.pause();",
                "val":"Pause Timeline"
            },
            {
                "key":"tl.resume();",
                "val":"Continue Playback"
            },
            {
                "key":"tl.seek(1.5);",
                "val":"Go to 1.5s"
            },
            {
                "key":"tl.reverse()",
                "val":"Reverse Playback anytime"
            },
            {
                "key":"tl.timeScale(2);",
                "val":"Speed up timeline"
            },
            {
                "key":"tl.progress(0.5);",
                "val":"Skip to halfway"
            }
        ]
    }
}
