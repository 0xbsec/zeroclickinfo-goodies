#!/usr/bin/env perl
use strict;
use warnings;

use Test::More;
use DDG::Test::Goodie;

zci is_cached => 1;
zci answer_type => 'bioseq';

my $test_nseq = "TTTATAAGAAACAAAAAAAAGAAAUAAAAAATGAGTAATACTTCUUCGTACGAGAAGAATAATCCAGATAATCTGAAACACAAUGGTATTACCATAGATTCTGAGTUUCTAACTCAGGAGCCAATAACCATTCCCTCAAATGGCTCCGCTGTTTCTATTGACGAAACAGGTTCAGGGTCCAAATGGCAAGACTTTAAAGATTCTTTCAAAAGGGTAAAACCTATTGAAGTTGATCCTAATCTTTCAGAAGCTGAAAAAGTGGCTATCATCACTGCCCAAACTCCATTGAAGCACCACTTGAAGAATAGACATTTGCAAATGATTGCCATCGGTGGTGCCATCGGTACTGGTCTGCTGGTTGGGTCAGGTACTGCACTAAGAACAGGTGGTCCCGCTTCGCTACTGATTGGATGGGGGTC";
my $test_pseq = "MSNTSSYEKNNPDN";
#GAP1 from -30 to +190, with some T's -> U's from yeastgenome.org

my $help = "To use the \"bioseq\" DDGoodie, enter a function name then the nucleotide or amino acid sequence."
         . "\n	r	reverse the sequence, return DNA"
         . "\n	c	complement the sequence, return DNA"
         . "\n	rc	reverse-complement the sequence, return DNA"
         . "\n	tu	replace all T with U"
         . "\n	tln	translate nucleotides to amino acids in three frames"
         . "\n	t	estimate the melting temperature of sequence as DNA"
         . "\n	w	estimate the DNA weight of sequence as DNA"
         . "\nFor example, \"bioseq rc ATCGCGATUCGAT\" would return the reversed complementary sequence."
         . "\nFor example, \"bioseq tln ATCGCGATUCGAT\" would return the translation of the sequence.";
my $help_html = $help;
$help_html =~ s/\n/<br>/g;

ddg_goodie_test(
	['DDG::Goodie::BioSeq'],
	'bioseq h'		=> test_zci($help, html => $help_html),
	'bioseq help'		=> test_zci($help, html => $help_html),
	'bioseq r '		=> test_zci(""),
	'bioseq r '.$test_nseq	=> test_zci("Reversed: CTGGGGGTAGGTTAGTCATCGCTTCGCCCTGGTGGACAAGAATCACGTCATGGACTGGGTTGGTCGTCTGGTCATGGCTACCGTGGTGGCTACCGTTAGTAAACGTTTACAGATAAGAAGTTCACCACGAAGTTACCTCAAACCCGTCACTACTATCGGTGAAAAAGTCGAAGACTTTCTAATCCTAGTTGAAGTTATCCAAAATGGGAAAACTTTCTTAGAAATTTCAGAACGGTAAACCTGGGACTTGGACAAAGCAGTTATCTTTGTCGCCTCGGTAAACTCCCTTACCAATAACCGAGGACTCAATCTTTGAGTCTTAGATACCATTATGGTAACACAAAGTCTAATAGACCTAATAAGAAGAGCATGCTTCTTCATAATGAGTAAAAAATAAAGAAAAAAAACAAAGAATATTT"),
	'bioseq c '.$test_nseq	=> test_zci("Complement: AAATATTCTTTGTTTTTTTTCTTTATTTTTTACTCATTATGAAGAAGCATGCTCTTCTTATTAGGTCTATTAGACTTTGTGTTACCATAATGGTATCTAAGACTCAAAGATTGAGTCCTCGGTTATTGGTAAGGGAGTTTACCGAGGCGACAAAGATAACTGCTTTGTCCAAGTCCCAGGTTTACCGTTCTGAAATTTCTAAGAAAGTTTTCCCATTTTGGATAACTTCAACTAGGATTAGAAAGTCTTCGACTTTTTCACCGATAGTAGTGACGGGTTTGAGGTAACTTCGTGGTGAACTTCTTATCTGTAAACGTTTACTAACGGTAGCCACCACGGTAGCCATGACCAGACGACCAACCCAGTCCATGACGTGATTCTTGTCCACCAGGGCGAAGCGATGACTAACCTACCCCCAG"),
	'bioseq c '.$test_pseq	=> test_zci(undef),	#Is returning undef okay?
	'bioseq rc '.$test_nseq	=> test_zci("Reversed complement: GACCCCCATCCAATCAGTAGCGAAGCGGGACCACCTGTTCTTAGTGCAGTACCTGACCCAACCAGCAGACCAGTACCGATGGCACCACCGATGGCAATCATTTGCAAATGTCTATTCTTCAAGTGGTGCTTCAATGGAGTTTGGGCAGTGATGATAGCCACTTTTTCAGCTTCTGAAAGATTAGGATCAACTTCAATAGGTTTTACCCTTTTGAAAGAATCTTTAAAGTCTTGCCATTTGGACCCTGAACCTGTTTCGTCAATAGAAACAGCGGAGCCATTTGAGGGAATGGTTATTGGCTCCTGAGTTAGAAACTCAGAATCTATGGTAATACCATTGTGTTTCAGATTATCTGGATTATTCTTCTCGTACGAAGAAGTATTACTCATTTTTTATTTCTTTTTTTTGTTTCTTATAAA"),
	'bioseq tln '.$test_nseq	=> test_zci("Translated your input sequence to amino acid sequence:
Frame 1: FIRNKKKK {STOP} K {START} MSNTSSYEKNNPDNLKHNGITIDSEFLTQEPITIPSNGSAVSIDETGSGSKWQDFKDSFKRVKPIEVDPNLSEAEKVAIITAQTPLKHHLKNRHLQMIAIGGAIGTGLLVGSGTALRTGGPASLLIGWG
Frame 2: L {STOP} ETKKRNKK {STOP} VILLRTRRIIQII {STOP} NT {START} MVLP {STOP} ILSF {STOP} LRSQ {STOP} PFPQ {START} MAPLFLLTKQVQGPNGKTLKILSKG {STOP} NLLKLILIFQKLKKWLSSLPKLH {STOP} STT {STOP} RIDICK {STOP} LPSVVPSVLVCWLGQVLH {STOP} EQVVPLRY {STOP} LDGG
Frame 3: YKKQKKEIKNE {STOP} YFFVREE {STOP} SR {STOP} SETQWYYHRF {STOP} VSNSGANNHSLKWLRCFY {STOP} RNRFRVQ {START} MARL {STOP} RFFQKGKTY {STOP} S {STOP} S {STOP} SFRS {STOP} KSGYHHCPNSIEAPLEE {STOP} TFANDCHRWCHRYWSAGWVRYCTKNRWSRFATDW {START} MGV"),
	'bioseq t '.$test_nseq	=> test_zci("Estimated melting temperature of 79.93 Celsius, supposing 50mM monovalent cations"),
	'bioseq t '.$test_pseq	=> test_zci("BioSeq Error: Can't calculate temperature for non-nucleotide sequence (doesn't support IUPAC codes)"),
	'bioseq temp TAATACGA'	=> test_zci("Estimated melting temperature of 20.00 Celsius, supposing 50mM monovalent cations"),
	'bioseq w '.$test_nseq	=> test_zci("That nucleotide sequence weighs about 129631.80 grams per mole"),
	'bioseq w '.$test_pseq	=> test_zci("That amino acid sequence weighs about 1833.00 dalton"),
);

done_testing;
